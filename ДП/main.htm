<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="style.css">
    <link rel="stylesheet" href="../подсветка/styles/default.min.css">
    <title>Динамическое программирование</title>
</head>
<body>
    <header class="header">
        <a href="file:///C:/Users/admin/Documents/%D0%BF%D1%80%D0%BE%D0%B5%D0%BA%D1%82%209%20%D0%BA%D0%BB%D0%B0%D1%81%D1%81/%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA%20%D1%82%D0%B5%D0%BC/index.htm" class="return">Назад</a>
        <div class="topic">Динамическое программирование</div>
    </header>
    <div class="container">
        <section class="about_topic">
            <h1>Определение</h1>
            <p>Динамическое программирование — метод решения задачи путём её разбиения на несколько одинаковых подзадач, рекуррентно связанных между собой. Самой простой задачой на динамическое программирование - это числа фибоначчи.</p>
            <h1>Суть динамического программирования</h1>
            <p>Вся идея ДП заключается в следующим:</p>
            <p>1) Свести задачу для nn к задаче для чисел, меньших, чем nn — то есть найти какую-то рекурсивную формулу.</p>
            <p>2) Создать массив (или какую-нибудь другую структуру данных) для хранения ответов на подзадачи.</p>
            <p>3) Заполнить начало массива вручную (базовые случае, для которых формула не работает).</p>
            <p>4) Обойти массив от известных значений в неизвестные и заполнить ответы по формуле.</p>
            <p>5) Вывести ответ — обычно просто записанный в последней ячейке массиве.</p>
            <p>Чтобы решить задачу динамическим программированием, вы должны ответить на 5 вопросов:</p>
            <p>1) Что лежит в массиве? (чаще всего самый важный вопрос)</p>
            <p>2) Как инициализировать начало массива?</p>
            <p>3) Как обходить массив? (чаще всего слева направо, но не всегда)</p>
            <p>4) Какой формулой считать элементы массива?</p>
            <p>5) Где в массиве лежит ответ?</p>
            <p>Разберем задачу: нужно найти n-ое число фибоначчи.</p>
            <p><bold>Определение чисел фибоначчи:</bold>Числа Фибоначчи — элементы числовой последовательности, в которой первые два числа равны 1, а каждое последующее число равно сумме двух предыдущих чисел</p>
            <img src="images/fibonacci.png" alt="" class = "img" width="700">
            <pre>
                <code data-lang="cpp">
                    #include &lt;iostream&gt;

                    using namespace std;

                    int main()
                    {
                        int n;
                        cin>>n;
                        // создадим массив, где i элемент - это i+1 число фибоначчи
                        int arr[n];
                        // База ДП
                        arr[0] = 1; // Т.к первые два числа фибоначчи равны 1, то мы делаем их базой
                        arr[1] = 1;
                        
                        for(int i = 2 ;i < n;i++)
                        {
                            arr[i] = arr[i-1] + arr[i-2]; // Наша рекуррентная формула
                            // Мы знаем предыдущие два элемента, поэтому просто их складываем
                        }

                        cout << arr[n-1]; // Ответ хранится в arr[n-1]
                    }
                    
                </code>
            </pre>
        </section>
    </div>
    
    <script src="../подсветка/highlight.min.js"></script>
    <script>hljs.highlightAll();</script>
</body>
</html>