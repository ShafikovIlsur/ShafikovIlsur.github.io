<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="style.css">
    <link rel="stylesheet" href="../подсветка/styles/default.min.css">
    <title>Переменные</title>
</head>
<body>
    <header class="header">
        <a href="file:///C:/Users/admin/Documents/%D0%BF%D1%80%D0%BE%D0%B5%D0%BA%D1%82%209%20%D0%BA%D0%BB%D0%B0%D1%81%D1%81/%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA%20%D1%82%D0%B5%D0%BC/index.htm" class="return">Назад</a>
        <div class="topic">Переменные и типы данных</div>
    </header>
    <div class="container">
        <section class="about_topic">
            <p><h1>Определение</h1></p>
            <p>Переменная - это область памяти, которой назначено имя (идентификатор). Если говорить просто, то представьте коробку, в которую вы положили что-либо. Также вы подписали эту коробку. Объем корбки - это и есть память, которую он занимает. Таким образом мы можем хранить какие-либо данные в переменных, а после использовать их.</p>
            <p>Чтобы объявить переменную, нужно сначала выбрать тип данных этой переменной. После нужно дать название.</p>
            <pre>
                <code data-lang="cpp">
                    #include &lt;iostream&gt;
                    
                    using namespace std;

                    int main()
                    {
                        int num;
                        //Целочисленная переменная
                        return 0;
                    }
                </code>
            </pre>
            <p>Чтобы положить какие-либо данные в перменную нужно через оператор = присвоить ей какие-либо значение.</p>
            <img src="images/переменные1.jpg" alt="" class = "img">
            <pre>
                <code data-lang="cpp">
                    #include &lt;iostream&gt;
                    
                    using namespace std;

                    int main()
                    {
                        int num = 5;
                        //Целочисленная переменная
                        return 0;
                    }
                </code>
            </pre>
            <p>Также мы можем поменять значение переменной, тогда старые данные переменной стираются</p>
            <img src="images/переменные2.jpg" alt="" class = "img">
            <pre>
                <code data-lang="cpp">
                    #include &lt;iostream&gt;
                    
                    using namespace std;

                    int main()
                    {
                        int num = 5;
                        num = 50;
                        //Целочисленная переменная
                        return 0;
                    }
                </code>
            </pre>
            <p><h1>Типы данных</h1></p>
            <p>Также мы можем хранить не только целочисленные значение. Рассмотрим основные типы данных. </p>
            <pre>
                <code data-lang="cpp">
                    int main()
                    {
                        int a = 8; //Целочисленная переменная
                        double b = 8.2; // Тип данных с плавающей запятой
                        float c = 8.2; // Тип данных с плавающей запятой (Точность хуже, чем у double)
                        char d = 'a'; // Символьный тип данных (Хранит только 1 символ)
                        bool e = false; // Логический тип данных
                        return 0;
                    }
                </code>
            </pre>
            <p>Также у каждого типа данных есть свой размер. Вот размеры переменных в памяти.</p>
            <img src="images/Размеры.png" alt="" class = "img">
            <p>Чем больше памяти занимает переменная, тем большее она может принимать значение.</p>
            <p><h1>Математические операции</h1></p>
            <p>В C++ есть следующие операции:</p>
            <pre>
                <code data-lang="cpp">
                    int main()
                    {
                        //Сложение
                        int a = 5;
                        a = a + 10; // Теперь в a хранится число 15
                        a += 10 // Сокращенный вариант сложения
                        a++; //Если мы прибавляем еденицу, то можем использовать инкремент
                        // Также можно прибавлять значения переменных
                        a = 5;
                        int b = 3;
                        a += b; // Теперь в a хранится значение 8
                        return 0;
                    }
                </code>
            </pre>
            <pre>
                <code data-lang="cpp">
                    int main()
                    {
                        //Вычитание
                        int a = 5;
                        a = a - 10; // Теперь в a хранится число -5
                        a -= 10 // Сокращенный вариант умножения
                        a--; //Если мы вычитаем еденицу, то можем использовать декремент
                        // Также можно вычитать значения переменных
                        a = 5;
                        int b = 3;
                        a -= b; // Теперь в a хранится значение 2
                        return 0;
                    }
                </code>
            </pre>
            <pre>
                <code data-lang="cpp">
                    int main()
                    {
                        //Умножение
                        int a = 5;
                        a = a * 10; // Теперь в a хранится число 50
                        a *= 10 // Сокращенный вариант умножения
                        // Также можно умножать значения переменных
                        a = 5;
                        int b = 3;
                        a *= b; // Теперь в a хранится значение 15
                        return 0;
                    }
            </code>
        </pre>
        <pre>
            <code data-lang="cpp">
                int main()
                {
                    //Целочисленное деление(Результатом такого деления является только целая часть)
                    int a = 5;
                    a = a / 10; // Теперь в a хранится число 0
                    a *= 10 // Сокращенный вариант деления
                    // Также можно умножать значения переменных
                    a = 5;
                    int b = 3;
                    a /= b; // Теперь в a хранится значение 1
                    //Деление с вещественнами числами
                    float d = 5.0;
                    d /= 10.0; // В d хранится 0.5
                    return 0;
                }
            </code>
        </pre>
        <pre>
            <code data-lang="cpp">
                int main()
                {
                    //Получение остатка от деления
                    int a = 10;
                    int b = 7;
                    a = a % b; // Теперь в a хранится отсаток 3
                    a %= b; // Сокращенный вариант
                    // Данная операция невозможна для вещественных чисел
                    float d = 5.3;
                    d %= 2; // Будет ошибка
                    return 0;
                }
            </code>
        </pre>
        </section>
    </div>
    <script src="../подсветка/highlight.min.js"></script>
    <script>hljs.highlightAll();</script>
</body>