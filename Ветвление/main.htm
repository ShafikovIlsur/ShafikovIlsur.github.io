<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="style.css">
    <link rel="stylesheet" href="../подсветка/styles/default.min.css">
    <title>Ветвление</title>
</head>
<body>
    <header class="header">
        <a href="file:///C:/Users/admin/Documents/%D0%BF%D1%80%D0%BE%D0%B5%D0%BA%D1%82%209%20%D0%BA%D0%BB%D0%B0%D1%81%D1%81/%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA%20%D1%82%D0%B5%D0%BC/index.htm" class="return">Назад</a>
        <div class="topic">Ветвление</div>
    </header>
    <div class="container">
        <section class="about_topic">
            <h1>Условные выражения (Операции отношения и логические операции)</h1>
            <p>Условные выражения представляют собой некоторое условие и возвращают значение типа <bold>bool</bold>, то есть значение <bold>true</bold> (если условие истинно), либо значение <bold>false</bold> (если условие ложно). К условным выражениям относятся операции отношения и логические операции.</p>
            <p>В языке программирования C++ есть следующие операции отношения:</p>
            <pre>
                <code data-lang="cpp">
                    #include &lt;iostream&gt;
                    
                    using namespace std;

                    int main()
                    {
                        // Операция "равно" ("=="). Возвращает true, если оба операнда равны, и false, если они не равны:
                        int a = 10;
                        int b = 4;
                        bool c = a == b; // false
                        bool d = a == 10; // true
                        // Операция "больше чем" (">"). Возвращает true, если первый операнд больше второго, и false, если первый операнд меньше второго:
                        a = 10;
                        b = 4;
                        c = a > b; // true
                        // Операция "меньше чем" ("<"). Возвращает true, если первый операнд меньше второго, и false, если первый операнд больше второго:
                        c = 10 < 4; // false
                        // Операция "меньше или равно" ("<="). Возвращает true, если первый операнд меньше или равен второму, и false, если первый операнд больше второго:
                        c = 10 <= 4; // false
                        c = 10 <= 14; // true
                        // Операция "больше или равно" (">="). Возвращает true, если первый операнд больше или равен второму, и false, если первый операнд меньше второго:
                        c = 10 >= 4; // true
                        d = 10 >= 14; // false
                        // Операция "не равно" ("!="). Возвращает true, если первый операнд не равен второму, и false, если оба операнда равны:
                        c = 10 != 4; // true
                        d = 4 != 4; // false
                        return 0;
                    }
                </code>
            </pre>
            <p>Логические операции обычно объединяют несколько операций отношения. К логическим операциям относят следующие:</p>
            <pre>
                <code data-lang="cpp">
                    #include &lt;iostream&gt;
                    
                    using namespace std;

                    int main()
                    {
                        // ! (операция отрицания)
                        // Унарная операция, которая возвращает true, если операнд равен false. Если операнд равен true, операция возвращает false.
                        bool a = true;
                        bool b = !a; // false
                        bool c =!10<5; // true
                        // && (конъюнкция, логическое умножение)
                        // Возвращает true, если оба операнда не равны false. Возвращает false, если хотя бы один операнд равен false.
                        a = true;
                        b = false;
                        c = a && b; // false
                        bood d = a && true; // true
                        // || (дизъюнкция, логическое сложение)
                        // Возвращает true, если хотя бы один операнд равен true. Возвращает false, если оба операнда равны false.
                        a = true;
                        b = false;
                        c = a || b; // true
                        d = b || false; // false
                        return 0;
                    }
                </code>
            </pre>
            <h1>Применение</h1>
            <p>Иногда нам нужно совершать какие-либо действия в зависимости от условиий. Пример: если число равен 1, то мы выводим "Hello", иначе мы выводим "Goodbye". Имеено для этого нам нужно ветвление. Ветвление осуществляется с помощью операторов if и else.</p>
            <h1>Операторы if и else</h1>
            <p>Условная конструкция в С++ всегда записывается в круглых скобках после оператора <bold>if</bold>. Если условие в скобках равняется true (т.е условие выполнилось), то будут выполняться команды в фигурных скобах конструкции.</p>
            <img src="images/if.jpg" alt="" class = "img">
            <pre>
                <code data-lang="cpp">
                    #include &lt;iostream&gt;
                    
                    using namespace std;

                    int main()
                    {
                        int a = 5;
                        if(a < 10)
                        {
                            cout << a << endl;
                        }
                        return 0;
                    }
                </code>
            </pre>
            <p>В данном примере программа выводит переменную a.</p>
            <pre>
                <code data-lang="cpp">
                    #include &lt;iostream&gt;
                    
                    using namespace std;

                    int main()
                    {
                        int a = 10;
                        if(a < 10)
                        {
                            cout << a << endl;
                        }
                        return 0;
                    }
                </code>
            </pre>
            <p>В данном примере программа ничего выводит (т.к условие не сработало, и начали выполняться команды после фигурных скобок).</p>
            <p>Также можно ввести оператор else ("иначе"). Если условие не сработает в <bold>if</bold>, то выполнятся команды в конструкции <bold>else</bold></p>
            <img src="images/if-else.jpg" alt="" class = "img">
            <pre>
                <code data-lang="cpp">
                    #include &lt;iostream&gt;
                    
                    using namespace std;

                    int main()
                    {
                        int a = 10;
                        if(a < 10)
                        {
                            cout << a << endl;
                        }else{
                            cout << "This number does not fit." << endl;
                        }
                        return 0;
                    }
                </code>
            </pre>
            <p>Т.к условие не сработало, то программа перешла выполнять команды в конструкции <bold>else</bold>.</p>
            <p>Также можно совместить эти 2 оператора и использовать конструкцию <bold>else if</bold>. Каждому оператору <bold>if</bold> соответствует только один оператор <bold>else</bold>. Совокупность этих операторов — <bold>else if</bold> означает, что если не выполнилось предыдущее условие, то проверить данное. Если ни одно из условий не верно, то выполняется тело оператора else.</p>
            <img src="images/elseif.png" alt="" class = "img">
            <pre>
                <code data-lang="cpp">
                    #include &lt;iostream&gt;
                    
                    using namespace std;

                    int main()
                    {
                        int a = 11;
                        if(a < 10)
                        {
                            cout << "The number is small";
                        }else if(a == 10)
                        {
                            cout << "Number fit";
                        }else{
                            cout << "The number is big";
                        }
                        return 0;
                    }
                    // Программа выводит: The number is big
                </code>
            </pre>
            <p>Если после оператора <bold>if</bold>, <bold>else</bold> или их связки <bold>else if</bold> должна выполняться только одна команда, то фигурные скобки можно не ставить.</p>
            <p>Условные выражения мы можем использовать в <bold>if и else if</bold>.</p>
            <pre>
                <code data-lang="cpp">
                    #include &lt;iostream&gt;
                    
                    using namespace std;

                    int main()
                    {
                        int a = 5, b = 3;
                        if(a >= 5 && b >= 1)
                        {
                            // Тело конструкции
                        }
                        // В данном случае условие сработает, т.к a >= 5 и b >= 1
                        return 0;
                    }
                </code>
            </pre>
        </section>
    </div>
    <script src="../подсветка/highlight.min.js"></script>
    <script>hljs.highlightAll();</script>
</body>